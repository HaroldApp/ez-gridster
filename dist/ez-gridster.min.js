"use strict";angular.module("ez.gridster",[]).constant("EzGridsterConfig",{widget_template:"ez-gridster-widget.html",widget_base_dimensions:[400,300],widget_margins:[5,5],widget_selector:"li",helper:"clone",draggable:{},remove:{silent:!1},resize:{enabled:!0}}).service("GridsterService",["$compile","$timeout","$templateCache",function(a,b,c){var d=this;this.gridster=null,this.scope=null,this.options={},this.getWidgetTemplate=function(b){d.widgetTemplate||(d.widgetTemplate=c.get(d.options.widget_template));var e=d.scope.$new();return e.widget=b,a(angular.element(d.widgetTemplate).get(0))(e)},this.init=function(a,b,c){d.widgetTemplate=null,d.options=c,d.gridster=a,d.scope=b},this.clear=function(){return console.log("clear"),d.gridster.remove_all_widgets()},this.setWidgets=function(a,c){b(function(){d.clear(),angular.forEach(a,function(a){c&&angular.extend(a,c),d.gridster.add_widget(d.getWidgetTemplate(a),a.sizex,a.sizey,a.col,a.row)})},100)},this.addWidget=function(a){return d.gridster.add_widget(d.getWidgetTemplate(a),a.sizex,a.sizey,a.col,a.row)},this.removeWidget=function(a,b){return d.gridster.remove_widget(a,b)},this.nextPosition=function(a,b){return d.gridster.next_position(a,b)},this.generateStylesheet=function(){return d.gridster.generate_stylesheet()}}]).directive("ezGridster",["EzGridsterConfig","GridsterService",function(a,b){return{restrict:"A",scope:{ezGridsterConfig:"=?"},compile:function(c){return c.addClass("gridster").append("<ul></ul>"),function(c,d){var e=angular.extend(a,c.ezGridsterConfig),f=d.find("ul").gridster(e).data("gridster");b.init(f,c,e)}}}}]);